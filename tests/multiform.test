<?php
/**
 * @file
 * 
 * 
 *
 * @author Kálmán Hosszu - hosszu.kalman@gmail.com - http://premiumcmsthemes.com http://www.kalman-hosszu.com
 */

class MultiformTestCase extends DrupalWebTestCase {
  
  /**
   * Info method.
   *
   * @return array 
   */
  public static function getInfo() {
    return array(
      'name' => 'Forms functionality',
      'description' => 'Testing multiform functionality.' ,
      'group' => 'Multiform',
    );
  }
  
  /**
   * Overriden setUp function.
   */
  public function setUp() {
    parent::setUp('multiform', 'multiform_test');
  }
  
  /**
   * Check various submit ops.
   */
  public function testSubmitHandling() {
    // Go to the form page
    $this->drupalGet('multiform-test/1');
    
    
    // Check buttons
    $this->assertFieldByName('op', 'save');
    $this->assertFieldByName('op', 'delete');
    
    // Save button
    $this->drupalPost(NULL, array(), 'save');
    $this->assertText('multiform_test1_1multiform_test1_submit_button', t('First form save message is found.'));
    $this->assertText('multiform_test1_2multiform_test1_submit_button', t('Second form save message is found.'));
    
    // Delete button
    $this->drupalPost(NULL, array(), 'delete');
    $this->assertText('multiform_test1_1multiform_test1_delete_button', t('First form delete message is found.'));
    $this->assertText('multiform_test1_2multiform_test1_delete_button', t('Second form delete message is found.'));
  }
  
  /**
   * Check the merged fields are exists.
   */
  public function testFieldsAreExists() {
    // Go to the form page
    $this->drupalGet('multiform-test/2');
    
    // Check textfields
    $this->assertFieldByName('multiform[multiform_test2_1_0][required_text_1]');
    $this->assertFieldByName('multiform[multiform_test2_2_1][required_text_2]');
    
    // Check button
    $this->assertFieldByName('op', 'save');
  }
  
}